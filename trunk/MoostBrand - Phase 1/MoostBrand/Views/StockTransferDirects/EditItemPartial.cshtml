@model MoostBrand.DAL.StockTransferDetail
<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">Edit Item</h4>
    </div>
    @using (Html.BeginForm())
            {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.InventoryID)

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Inventories.Items.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.DisplayFor(model => model.Inventories.Items.Description)
                    </div>
                </div>
            

                <label id="editquantitymsg" class="text-danger col-md-8 col-md-offset-2 no-padding"></label>
                <div class="clearfix"></div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">             
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control txtQty" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.InStock, htmlAttributes: new { @class = "control-label col-md-2"})
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.InStock, new { htmlAttributes = new { @class = "form-control instock_txt"  , @disabled = true } })
                        @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.AprovalStatusID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.DropDownList("AprovalStatusID", String.Empty)
                        @Html.ValidationMessageFor(model => model.AprovalStatusID, "", new { @class = "text-danger" })
                    </div>
                </div>
           
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            <input type="submit" value="Edit Item" class="btn btn-green" />
        </div>
    }
</div><!-- /.modal-content -->

<script>
    @*$(document).ready(function () {

        var qty =@ViewBag.Qty;

        $("#Instock").val(qty);
    });*@

    $('#Quantity').focusout(function () {

        var qty =@ViewBag.Qty;
        if ($("#Quantity").val() <= qty && $("#Quantity").val() > 0) {

            $('#editquantitymsg').text('');
        }
        else
        {

            $('#editquantitymsg').text('invalid quantity');
            var qty =@ViewBag.Qty;

            $("#Quantity").val(qty);
        }

    });

    </script>