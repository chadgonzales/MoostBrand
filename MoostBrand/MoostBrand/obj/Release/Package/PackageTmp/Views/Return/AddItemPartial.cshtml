@model MoostBrand.DAL.ReturnedItem
<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">Add Item</h4>
    </div>
    @using (Html.BeginForm())
            {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*@if (ViewBag.TransType == 1)
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2">Item Name</label>
                        <div class="col-md-8">
                            @Html.DropDownList("StockTransferDetailID", String.Empty)
                            @Html.ValidationMessageFor(model => model.StockTransferDetailID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2">Item Name</label>
                        <div class="col-md-8">
                            @Html.DropDownList("ReceivingDetailID", String.Empty)
                            @Html.ValidationMessageFor(model => model.ReceivingDetailID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }*@

            @Html.Hidden("CategoryID")
            @Html.Hidden("ItemID")
            @Html.Hidden("ItemCode")

            <div class="form-horizontal" id="modalItem">
                <div class="form-group">
                    <label class="control-label col-md-2">Item Code</label>
                    <div class="col-md-8">
                        @Html.TextBox("itemcode", ViewBag.ItemCode as string, new { @class = "form-control" })
                    </div>
                </div>
            </div>


            <div class="form-horizontal" id="modalItem">
                <div class="form-group">
                    <label class="control-label col-md-2">Item Name</label>
                    <div class="col-md-8">
                        @Html.TextBox("itemsearch", ViewBag.ItemName as string, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="form-horizontal" id="modalCat">
                <div class="form-group">
                    <label class="control-label col-md-2">Category</label>
                    <div class="col-md-8">
                        @Html.TextBox("catsearch", ViewBag.CatName as string, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            @*=====================================================================================================================================================*@
            @*=====================================================================================================================================================*@
            @*=====================================================================================================================================================*@
            @*=====================================================================================================================================================*@



            
            <div class="form-horizontal">
                <label id="quantitymsg" class="text-danger col-md-8 col-md-offset-2 no-padding"></label>
                <div class="clearfix"></div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OldQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OldQuantity, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.OldQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-horizontal">
                <label id="quantitymsg" class="text-danger col-md-8 col-md-offset-2 no-padding"></label>
                <div class="clearfix"></div>
                <div class="form-group">
                    @Html.LabelFor(model => model.NewQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NewQuantity, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.NewQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-horizontal">
                <label id="quantitymsg" class="text-danger col-md-8 col-md-offset-2 no-padding"></label>
                <div class="clearfix"></div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Pullout, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <input type="text" id="Hidden_Quantity" hidden="hidden" />
                        @Html.EditorFor(model => model.Pullout, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.Pullout, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            <input type="submit" value="Add Item" class="btn btn-green" />
        </div>
    }
</div><!-- /.modal-content -->

<script>

    @*$("#StockTransferDetailID").change(function () {
        var val = $("#StockTransferDetailID option:selected").val();

        $.ajax({
            url: '@Url.Action("DisplayQuantity", "Return")',
            data: { ID: val },
            type: 'get',
            success: function (data) {
                $("#OldQuantity").val(data);
                $("#Hidden_Quantity").val(data);

            }
        })
    });*@

    $('#Pullout').keyup(function () {

        if (parseInt($("#Pullout").val()) <= parseInt($("#Hidden_Quantity").val()) && parseInt($("#Pullout").val()) > 0)
        {
            var sum = parseInt($("#Hidden_Quantity").val()) - parseInt($("#Pullout").val());
            $('#NewQuantity').val(sum);
            $('#quantitymsg').text('');
        }
        else
        {
            $('#quantitymsg').text('invalid quantity')
            $("#Pullout").val($("#Hidden_Quantity").val());
            $('#NewQuantity').val(0);
        }

    });


</script>