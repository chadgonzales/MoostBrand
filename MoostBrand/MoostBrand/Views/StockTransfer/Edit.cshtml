@model MoostBrand.DAL.StockTransfer

@{
    ViewBag.Title = "Edit Stock Transfer";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.RequisitionID)
    @Html.HiddenFor(model => model.TransferID)

    <div class="panel-heading">
        <h4 class="panel-title">Edit Stock Transfer</h4>
        <hr />

    </div>
    <div class="panel-body">

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger alert alert-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.TransferID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.TransferID)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RequisitionID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.Requisition.RefNumber)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("LocationID", String.Empty)
                    @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TransferID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.TransferID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TransferID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.STDAte, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.STDAte, new { htmlAttributes = new { @class = "form-control date-picker" } })
                    @Html.ValidationMessageFor(model => model.STDAte, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Driver, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Driver, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Driver, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Helper, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Helper, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Helper, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReceivedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("ReceivedBy", String.Empty)
                    @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TimeReceived, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Helper, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Helper, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RequestedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("RequestedBy", String.Empty)
                    @Html.ValidationMessageFor(model => model.RequestedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.ApprovedBy)

            <div class="form-group">
                @Html.LabelFor(model => model.ReleasedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("ReleasedBy", String.Empty)
                    @Html.ValidationMessageFor(model => model.ReleasedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Operator, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Operator, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Operator, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CounterCheckedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("CounterCheckedBy", String.Empty)
                    @Html.ValidationMessageFor(model => model.CounterCheckedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("PostedBy", String.Empty)
                    @Html.ValidationMessageFor(model => model.PostedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.ApprovedStatus)

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <input type="submit" value="Save" class="btn btn-green" />
                    <a href='@Url.Action("Index")' class="btn btn-light-orange">
                        Back to List
                    </a>
                </div>
            </div>

        </div>
    </div>
}

<script language="javascript">
$(function () {

    // add class form-control to textarea and select
    $("input[disabled]").addClass("form-control");
    $("textarea").addClass("form-control");
    $("select").addClass("form-control");

    $('.date-picker').datepicker({
        autoclose: true
    });
});

</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

<script type="text/jscript">
    jQuery.validator.unobtrusive.adapters.add("dropdown", function (options) {
        if (options.element.tagName.toUpperCase() == "SELECT" && options.element.type.toUpperCase() == "SELECT-ONE") {
            options.rules["required"] = true;
            if (options.message) {
                options.messages["required"] = options.message;
            }
        }
    });
</script>
