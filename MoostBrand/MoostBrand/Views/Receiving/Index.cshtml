@model PagedList.IPagedList<MoostBrand.DAL.Receiving>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Receiving";
}

<div class="panel-heading">
    <h4 class="panel-title">Receiving</h4>
</div>
<div class="panel-body">
    <div class="dataTables_wrapper no-footer">
        <div class="dataTables_length">
            <a href="@Url.Action("Create")" class="btn btn-green" style="float:left;"> Create New <i class="fa fa-plus"></i></a>
        </div>
        <div class="dataTables_filter">
            @using (Html.BeginForm("Index", "Receiving", FormMethod.Post))
            {
                <p>
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control input-sm", @placeholder = "Search" })
                    <input type="submit" value="Search" class="btn btn-green" />
                </p>
            }
            <div class="clearfix"></div>
        </div>

        <div class="clearfix"></div>

    </div>


    <form id="action_form">
        @Html.AntiForgeryToken()
        <table class="table table-striped table-bordered table-hover table-full-width dataTable no-footer">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("Receiving ID", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Source
                    </th>
                    <th>
                        Destination
                    </th>
                    <th>
                        Status
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceivingID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceivingType.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.GetSourceLocation)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.GetLocation)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ApprovalStatu.Status)
                        </td>
                        <td>
                            <div class="custom-tools">
                                <a href='@Url.Action("Details", new { id = item.ID })' class="btn btn-xs btn-green tooltips" data-placement="top" data-original-title="Details">
                                    <i class="fa fa-file"></i>
                                </a>
                                @if (item.ApprovalStatus == 1)
                                {
                                    if (item.ReceivingTypeID  == 1 || Convert.ToInt32(Session["sessionuid"]) == item.EncodedBy)
                                    //if (Convert.ToInt32(Session["sessionuid"]) == item.EncodedBy || Convert.ToInt32(Session["usertype"]) == 1 || Convert.ToInt32(Session["usertype"]) == 4)
                                    {
                                        <a href='@Url.Action("Edit", new { id = item.ID })' class="btn btn-xs btn-blue tooltips" data-placement="top" data-original-title="Edit">
                                            <i class="fa fa-edit"></i>
                                        </a>
                                        <a href='@Url.Action("Delete", new { id = item.ID })' class="btn btn-xs btn-red tooltips" data-placement="top" data-original-title="Delete">
                                            <i class="fa fa-times fa fa-white"></i>
                                        </a>
                                    }
                                    //if (Convert.ToInt32(Session["usertype"]) == 1 || Convert.ToInt32(Session["usertype"]) == 4)
                                    //{
                                        <a href="#" id="approve_button" onclick="Approve(@item.ID)" class="btn btn-xs btn-dark-green tooltips" data-placement="top" data-original-title="Approve">
                                            <i class="fa fa-thumbs-up"></i>
                                        </a>
                                        <a href="#" id="deny_button" onclick="Deny(@item.ID)" class="btn btn-xs btn-dark-red tooltips" data-placement="top" data-original-title="Deny">
                                            <i class="fa fa-thumbs-down"></i>
                                        </a>


                                    if (item.ReceivingDetails.Where(p => p.AprovalStatusID == 2).Sum(p => p.Quantity) > 0 && item.ReceivingDetails.Where(p => p.AprovalStatusID == 2).Sum(p => p.Quantity) != item.ReceivingDetails.Sum(p => p.ReferenceQuantity) && item.ApprovalStatus != 5)
                                    {
                                        <a href = "#" id = "force closed" onclick = "ForceClosed(@item.ID)" class="btn btn-xs btn-dark-grey tooltips" data-placement="top" data-original-title="Force Closed">
                                            <i class="fa fa-close"></i>
                                        </a>
                                    }

                                        // }
}
                            </div>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </form>

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
<script type="text/javascript">
    function ReloadFunction() {
        location.reload();
    }

    function Approve() {

        $('#approve_button').attr("disabled", "disabled");

       
        var prID = arguments[0];

        var url = '@Url.Action("Approve", "Receiving")/' + prID;

        var frm = $("#action_form").serialize();

        $.post(url, frm);
        location.reload();
    }

    function Deny() {
        var prID = arguments[0];

        var url = '@Url.Action("Denied", "Receiving")/' + prID;

        var frm = $("#action_form").serialize();

        $.post(url, frm);
        location.reload();
    }


    function ForceClosed() {
        var prID = arguments[0];

        var url = '@Url.Action("ForceClosed", "Receiving")/' + prID;

        var frm = $("#action_form").serialize();

        $.post(url, frm);
        location.reload();

       
    }

    function ReloadFunction() {
        location.reload();
    }
</script>