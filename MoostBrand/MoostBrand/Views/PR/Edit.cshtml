@model MoostBrand.DAL.Requisition
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Edit Requisitions";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script>

    $(document).ready(function () {
        $("#VendorID").val(@ViewBag.VendorID);
        $("#vendorsearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetVendors")',
                    type: "POST",
                    dataType: "json",
                    data: { name: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                id: item.ID,
                                label: item.Name,
                                value: item.Name
                            };

                        }))

                    }
                })
            },
            select: function (event, ui) {
                $("#VendorID").val(ui.item.id);
            },
            messages: {
                noResults: "", results: ""
            },

        });
    })
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel-heading">
        <h4 class="panel-title">Edit Requisitions</h4>

        <hr />

    </div>
    <div class="panel-body">

        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.PaymentStatusID)


        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.RequisitionType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("RequisitionTypeID", String.Empty)
                    @Html.ValidationMessageFor(model => model.RequisitionTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RefNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.RefNumber, new { @readonly = "readonly", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RefNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RequestedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("RequestedBy")
                    @Html.ValidationMessageFor(model => model.RequestedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2 _date"></label>
                @*@Html.LabelFor(model => model.RequestedDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-6">
                    @Html.EditorFor(model => model.RequestedDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                    @Html.ValidationMessageFor(model => model.RequestedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("LocationID")
                    @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateRequired, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.DateRequired, new { htmlAttributes = new { @class = "form-control date-picker" } })
                    @Html.ValidationMessageFor(model => model.DateRequired, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.DateRequired, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBox("DateRequired", (string)ViewBag.DateRequired)
                    @Html.ValidationMessageFor(model => model.DateRequired, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <<div id="pr">
    @Html.Hidden("VendorID")
    <div class="form-group">
        @Html.LabelFor(model => model.Vendor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBox("vendorsearch", ViewBag.VendorName as string, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VendorID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PONumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.PONumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PONumber, "", new { @class = "text-danger" })
        </div>
    </div>

</div>

            <div id="cr">
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReservationType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("ReservationTypeID", String.Empty)
                        @Html.ValidationMessageFor(model => model.ReservationTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReservedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("ReservedBy")
                        @Html.ValidationMessageFor(model => model.ReservedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentStatusID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.PaymentStatus, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownList("PaymentStatusID")
                        @Html.ValidationMessageFor(model => model.PaymentStatusID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AuthorizedPerson, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.AuthorizedPerson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AuthorizedPerson, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ValidatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("ValidatedBy")
                        @Html.ValidationMessageFor(model => model.ValidatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShipmentType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("ShipmentTypeID")
                        @Html.ValidationMessageFor(model => model.ShipmentTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div id="dship">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DropShipType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.DropDownList("DropShipID")
                            @Html.ValidationMessageFor(model => model.DropShipID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div id="br">
                <div class="form-group">
                    @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("Destination")
                        @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.PlateNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PlateNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PlateNumber, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Others, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Others, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Others, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.TimeDeparted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.TimeDeparted, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TimeDeparted, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TimeArrived, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.TimeArrived, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TimeArrived, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            </div>

            @*<div id="brcr">
                <div class="form-group">
                    @Html.LabelFor(model => model.Driver, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Driver, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Driver, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ApprovalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("ApprovalStatus", String.Empty)
                        @Html.ValidationMessageFor(model => model.ApprovalStatus, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("ApprovedBy", String.Empty)
                        @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <input type="submit" value="Save" class="btn btn-green" />
                    <a href='@Url.Action("Index")' class="btn btn-light-orange">
                        Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script language="javascript">

    $('#RequestedDate').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#DateRequired').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#Customer').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#InvoiceNumber').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#AuthorizedPerson').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#PlateNumber').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#Others').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#TimeDeparted').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#TimeArrived').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#Driver').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });
    $('#Remarks').keyup(function () {
        var text = $(this).val();
        $(this).val(text.toUpperCase());
    });

    $(function () {
        HideOrShow(); //this calls it on load

        // add class form-control to textarea and select
        $("input[disabled]").addClass("form-control");
        $("textarea").addClass("form-control");
        $("select").addClass("form-control");
    });

    //function BindData(data) {
    //    $("#RefNumber").val(data);
    //}

    function HideOrShow() {
        var val = $("#RequisitionTypeID").val();
        if (val == 1) { //PR
            @*$.get("@Url.Action("GenerateRefNumber", "PR")/PUR", null, BindData);*@
            $('._date').html('PO Date');
            $("#br").hide();
            $("#pr").show();
            $("#cr").hide();
            $("#brcr").hide();
        } else if (val == 2) { //BR
            @*$.get("@Url.Action("GenerateRefNumber", "PR")/BR", null, BindData);*@
            $('._date').html('Requested Date');
            $("#br").show();
            $("#brcr").show();
            $("#pr").hide();
            $("#cr").hide();
        } else if (val == 3) { //WR
            @*$.get("@Url.Action("GenerateRefNumber", "PR")/WR", null, BindData);*@
            $('._date').html('Requested Date');
            $("#br").show();
            $("#pr").hide();
            $("#cr").hide();
            $("#brcr").show();
        } else if (val == 5) { //OR
            @*$.get("@Url.Action("GenerateRefNumber", "PR")/OR", null, BindData);*@
            $('._date').html('Requested Date');
            $("#br").show();
            $("#pr").hide();
            $("#cr").hide();
            $("#brcr").show();
        } else if (val == 4) { //CR
            @*$.get("@Url.Action("GenerateRefNumber", "PR")/CR", null, BindData);*@
            $('._date').html('Requested Date');
            $("#br").hide();
            $("#pr").hide();
            $("#cr").show();
            $("#brcr").show();
        } else {
            $('._date').html('Requested Date');
            $("#RefNumber").val("");
            $("#br").hide();
            $("#pr").hide();
            $("#cr").hide();
            $("#brcr").hide();
        }
    }

    $("#RequisitionTypeID").change(function () {
        HideOrShow();
    });

    $("#ShipmentTypeID").change(function () {
        var val = this.value;
        if (val == 2) { //PR
            $("#dship").show();
        } else {
            $("#dship").hide();
        }
    });
</script>
